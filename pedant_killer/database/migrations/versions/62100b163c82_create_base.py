"""create_base

Revision ID: 62100b163c82
Revises: 
Create Date: 2025-04-05 15:24:10.382609

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '62100b163c82'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('access_level',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('importance', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('breaking',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manufacturer',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manufacturer_device_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('device_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['device_type_id'], ['device_type.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_breaking',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('breaking_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breaking_id'], ['breaking.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_id', 'breaking_id', name='indx_uniq_service_breaking')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('access_level_id', sa.Integer(), nullable=False),
    sa.Column('telegram_username', sa.String(), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False, unique=True),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['access_level_id'], ['access_level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('manufacturer_device_type_id', sa.Integer(), nullable=False),
    sa.Column('name_model', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_device_type_id'], ['manufacturer_device_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('master_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('status_updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('sent_from_address', sa.String(), nullable=True),
    sa.Column('return_to_address', sa.String(), nullable=True),
    sa.Column('description_model_device', sa.String(), nullable=True),
    sa.Column('breaking_id', sa.Integer(), nullable=True),
    sa.Column('description_breaking', sa.String(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('rating', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['master_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['order_status.id'], ),
    sa.ForeignKeyConstraint(['breaking_id'], ['breaking.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_service',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('work_duration', sa.Integer(), nullable=True),
    sa.Column('warranty', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_device_service',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('device_service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['device_service_id'], ['device_service.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id', 'device_service_id', name='indx_uniq')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_device_service')
    op.drop_table('device_service')
    op.drop_table('order')
    op.drop_table('device')
    op.drop_table('user')
    op.drop_table('service_breaking')
    op.drop_table('manufacturer_device_type')
    op.drop_table('service')
    op.drop_table('order_status')
    op.drop_table('manufacturer')
    op.drop_table('device_type')
    op.drop_table('breaking')
    op.drop_table('access_level')
    # ### end Alembic commands ###
